openapi: 3.0.0
info:
  title: Anthropic Message Batches Cancellation API
  version: 1.0.0
  description: API for canceling message batches from Anthropic's language models. This specification is based on the documentation at https://docs.anthropic.com/en/api/canceling-message-batches.

servers:
  - url: https://api.anthropic.com/v1

paths:
  /message/batches/{message_batch_id}/cancel:
    post:
      summary: Cancel a Message Batch
      operationId: cancelMessageBatch
      tags:
        - MessageBatches
      parameters:
        - in: path
          name: message_batch_id
          required: true
          schema:
            type: string
          description: ID of the Message Batch to cancel
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResponse"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: Your unique API key for authentication. This key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the Console. Each key is scoped to a Workspace.
    AnthropicVersionHeader:
      type: apiKey
      in: header
      name: anthropic-version
      description: The version of the Anthropic API you want to use. Read more about versioning and our version history here.
    AnthropicBetaHeader:
      type: apiKey
      in: header
      name: anthropic-beta
      description: Optional header to specify the beta version(s) you want to use. To use multiple betas, use a comma separated list like `beta1,beta2` or specify the header multiple times for each beta.

  schemas:
    MessageBatchResponse:
      type: object
      required:
        - id
        - type
        - status
        - request_counts
        - created_at
        - expires_at
      properties:
        id:
          type: string
          description: Unique object identifier. The format and length of IDs may change over time.
        type:
          type: string
          enum: [message_batch]
          description: Object type. For Message Batches, this is always "message_batch".
        status:
          type: string
          enum: [in_progress, canceling, ended]
          description: Processing status of the Message Batch.
        request_counts:
          $ref: "#/components/schemas/RequestCounts"
        created_at:
          type: string
          format: date-time
          description: RFC 3339 datetime string representing the time at which the Message Batch was created.
        expires_at:
          type: string
          format: date-time
          description: RFC 3339 datetime string representing the time at which the Message Batch will expire and end processing, which is 24 hours after creation.
        ended_at:
          type: string
          format: date-time
          description: RFC 3339 datetime string representing the time at which processing for the Message Batch ended. Specified only once processing ends. Processing ends when every request in a Message Batch has either succeeded, errored, canceled, or expired.
        archived_at:
          type: string
          format: date-time
          description: RFC 3339 datetime string representing the time at which the Message Batch was archived and its results became unavailable.
        cancellation_initiated_at:
          type: string
          format: date-time
          description: RFC 3339 datetime string representing the time at which cancellation was initiated for the Message Batch. Specified only if cancellation was initiated.
        results_url:
          type: string
          format: uri
          description: URL to a .jsonl file containing the results of the Message Batch requests. Specified only once processing ends. Results in the file are not guaranteed to be in the same order as requests. Use the `custom_id` field to match results to requests.

    RequestCounts:
      type: object
      properties:
        processing:
          type: integer
        succeeded:
          type: integer
